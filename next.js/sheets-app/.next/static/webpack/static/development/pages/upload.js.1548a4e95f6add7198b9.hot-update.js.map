{"version":3,"file":"static/webpack/static\\development\\pages\\upload.js.1548a4e95f6add7198b9.hot-update.js","sources":["webpack:///./components/uploadComp.jsx"],"sourcesContent":["import React, { Component } from 'react'\r\nimport readXlsxFile from 'read-excel-file'\r\nimport { Upfile, TranSport } from '../apis/datas'\r\nimport { Button, DatePicker, Select,Card,table } from 'antd'\r\nimport 'antd/dist/antd.css';\r\n\r\nconst { Option } = Select\r\nclass ComponentUpload extends Component {\r\n\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      file: [],\r\n      tranSportList: [],\r\n      dateSelect: [],\r\n      transportSelect: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    new Promise((resolve, rejects) => {\r\n      resolve(TranSport())\r\n    }).then(res => {\r\n      this.setState({\r\n        tranSportList: res\r\n      })\r\n    })\r\n  }\r\n  importExcel = () => {\r\n    const input = document.getElementById('file')\r\n    let result = []\r\n    readXlsxFile(input.files[0], {})\r\n      .then(res => {\r\n        res.forEach(arr => {\r\n          let arr1 = arr[0],\r\n            arr2 = arr[1],\r\n            arr3 = arr[2],\r\n            arr4 = arr[3],\r\n            arr5 = arr[4],\r\n            arr6 = arr[5]\r\n          result.push({\r\n            cel1: arr1,\r\n            cel2: arr2,\r\n            cel3: arr3,\r\n            cel4: arr4,\r\n            cel5: arr5,\r\n            cel6: arr6\r\n          })\r\n        })\r\n        // console.log(result)\r\n        this.setState({\r\n          file: result\r\n        })\r\n      })\r\n  }\r\n\r\n  Upload = () => {\r\n    let excel = this.state.file,\r\n      user = '1234',\r\n      date = this.state.dateSelect.toString(),\r\n      transport_comp = this.state.transportSelect.toString()\r\n    if (excel.length > 0) {\r\n      new Promise((resolve, rejects) => {\r\n        var a = Upfile(user, date, transport_comp, excel)\r\n        resolve(a)\r\n      }).then(res => {\r\n        console.log(res)\r\n      })\r\n        .catch(err => { console.log(err) })\r\n    }\r\n  }\r\n\r\n  TranSportSelect = (value) => {\r\n    console.log(value)\r\n    this.setState({\r\n      transportSelect: value\r\n    })\r\n  }\r\n\r\n  DateChange = (date, dateString) => {\r\n    console.log(dateString)\r\n    this.setState({\r\n      dateSelect:dateString\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n\r\n        <input type=\"file\" id=\"file\" onChange={this.importExcel} />\r\n        <br />\r\n        <DatePicker onChange={this.DateChange} />\r\n        <br />\r\n        <Select\r\n          style={{ width: 200 }}\r\n          onChange={this.TranSportSelect}\r\n        >\r\n          {this.state.tranSportList.map((data, index) => (\r\n            <Option key={index} value={data.transport_company_number}>{data.transport_company_name}</Option>\r\n          ))}\r\n        </Select>\r\n        <br />\r\n        <Button onClick={this.Upload}>upload</Button>\r\n        <br />\r\n      \r\n        <Table />\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ComponentUpload\r\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AAEA;AACA;AAAA;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAoBA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAQA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AA9CA;AAgDA;AAAA;AAAA;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AA9DA;AAgEA;AACA;AAAA;AACA;AADA;AAGA;AACA;AArEA;AAuEA;AACA;AAAA;AACA;AADA;AAGA;AACA;AA1EA;AACA;AACA;AACA;AACA;AAJA;AAFA;AAQA;AACA;;;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;;;AA0DA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAvGA;AACA;AAyGA;;;;A","sourceRoot":""}