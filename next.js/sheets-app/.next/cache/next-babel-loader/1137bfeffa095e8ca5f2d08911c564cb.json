{"ast":null,"code":"import _Table from \"antd/lib/table\";\nimport _Col from \"antd/lib/col\";\nimport _Card from \"antd/lib/card\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { AllOrders, WaitingOrders, PayBackOrders, Excess, Absent } from '../apis/datas';\nimport 'antd/dist/antd.css';\nimport { Bar } from 'react-chartjs-2';\nimport CheckLogin from '../components/CheckLogin';\nimport { withCookies } from 'react-cookie';\n\nvar databoard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(databoard, _Component);\n\n  function databoard() {\n    var _this;\n\n    _classCallCheck(this, databoard);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(databoard).call(this));\n\n    _defineProperty(_assertThisInitialized(_this), \"Cards\", function (e) {\n      //console.log(e.toString())\n      var valueCard = e.toString();\n\n      switch (valueCard) {\n        case \"alloder\":\n          var AllOdersData = _this.state.AllOdersData;\n\n          _this.setState({\n            dataTable: AllOdersData\n          });\n\n          break;\n\n        case \"waiting\":\n          var WaitingData = _this.state.WaitingData;\n\n          _this.setState({\n            dataTable: WaitingData\n          });\n\n          break;\n\n        case \"payback\":\n          var PayBackData = _this.state.PayBackData;\n\n          _this.setState({\n            dataTable: PayBackData\n          });\n\n          break;\n\n        case \"excess\":\n          var ExcessData = _this.state.ExcessData;\n\n          _this.setState({\n            dataTable: ExcessData\n          });\n\n          break;\n\n        case \"absent\":\n          var AbsentData = _this.state.AbsentData;\n\n          _this.setState({\n            dataTable: AbsentData\n          });\n\n          break;\n\n        default:\n          return \"error\";\n      }\n    });\n\n    _this.state = {\n      user: '1234',\n      dataTable: [],\n      AllOdersData: [],\n      AllOdersRow: 0,\n      AllOdersMonney: 0,\n      WaitingData: [],\n      WaitingRow: 0,\n      WaitingMonney: 0,\n      PayBackData: [],\n      PayBackRow: 0,\n      PayBackMonney: 0,\n      ExcessData: [],\n      ExcessRow: 0,\n      ExcessMonney: 0,\n      AbsentData: [],\n      AbsentRow: 0,\n      AbsentMonney: 0\n    };\n    return _this;\n  }\n\n  _createClass(databoard, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      try {\n        var cookies = this.props.cookies;\n        var user = cookies.get('userNumber').toString(),\n            store = cookies.get('storeNumber').toString();\n        new _Promise(function (resolve, reject) {\n          var orders = AllOrders(user, store);\n          resolve(orders);\n        }).then(function (res) {\n          var AllOdersRow = res.length;\n          var totalMonney = 0;\n          res.forEach(function (v) {\n            totalMonney = +totalMonney + +v.price;\n            return totalMonney;\n          });\n\n          _this2.setState({\n            AllOdersData: res,\n            AllOdersRow: AllOdersRow,\n            AllOdersMonney: totalMonney\n          });\n        });\n        new _Promise(function (resolve, reject) {\n          var waitingOrder = WaitingOrders(user, store);\n          resolve(waitingOrder);\n        }).then(function (res) {\n          var WaitingRow = res.length;\n          var totalMonney = 0;\n          res.forEach(function (v) {\n            totalMonney = +totalMonney + +v.price;\n          });\n\n          _this2.setState({\n            WaitingData: res,\n            WaitingRow: WaitingRow,\n            WaitingMonney: totalMonney\n          });\n        });\n        new _Promise(function (resolve, reject) {\n          var paybackorder = PayBackOrders(user, store);\n          resolve(paybackorder);\n        }).then(function (res) {\n          var PayBackRow = res.length;\n          var totalMonney = 0;\n          res.forEach(function (v) {\n            totalMonney = +totalMonney + +v.price;\n          });\n\n          _this2.setState({\n            PayBackData: res,\n            PayBackRow: PayBackRow,\n            PayBackMonney: totalMonney\n          });\n        });\n        new _Promise(function (resolve, reject) {\n          var excess = Excess(user, store);\n          resolve(excess);\n        }).then(function (res) {\n          var ExcessRow = res.length;\n          var totalMonney = 0;\n          res.forEach(function (v) {\n            totalMonney = +totalMonney + +v.received_total;\n            return totalMonney;\n          });\n\n          _this2.setState({\n            ExcessData: res,\n            ExcessRow: ExcessRow,\n            ExcessMonney: totalMonney\n          });\n        }); //\n\n        new _Promise(function (resolve, rejects) {\n          var absent = Absent(user, store);\n          resolve(absent);\n        }).then(function (res) {\n          var AbsentRow = res.length;\n          var totalMonney = 0;\n          res.forEach(function (v) {\n            totalMonney = +totalMonney + +v.received_total;\n            return totalMonney;\n          });\n\n          _this2.setState({\n            AbsentData: res,\n            AbsentRow: AbsentRow,\n            AbsentMonney: totalMonney\n          });\n        });\n      } catch (error) {}\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      return __jsx(\"div\", null, __jsx(CheckLogin, null), __jsx(_Col, {\n        lg: {\n          span: 6,\n          offset: 1\n        }\n      }, __jsx(_Card, {\n        hoverable: true,\n        style: {\n          boxShadow: \"0 3px 6px 0 rgba(0, 0, 0, 0.2)\"\n        }\n      }, __jsx(_Card.Grid, {\n        onClick: function onClick() {\n          return _this3.Cards(\"alloder\");\n        },\n        hoverable: true,\n        style: cardStyle\n      }, __jsx(\"h3\", null, this.state.AllOdersMonney.toLocaleString('en-US', {\n        minimumFractionDigits: 2\n      }), \" \\u0E1A\\u0E32\\u0E17\"), __jsx(\"h4\", null, \"\\u0E23\\u0E32\\u0E22\\u0E01\\u0E32\\u0E23\\u0E17\\u0E31\\u0E49\\u0E07\\u0E2B\\u0E21\\u0E14\"), __jsx(\"h4\", null, this.state.AllOdersRow, \" \\u0E2D\\u0E2D\\u0E40\\u0E14\\u0E2D\\u0E23\\u0E4C\")), __jsx(_Card.Grid, {\n        onClick: function onClick() {\n          return _this3.Cards(\"waiting\");\n        },\n        hoverable: true,\n        style: cardStyle\n      }, __jsx(\"h3\", null, this.state.WaitingMonney.toLocaleString('en-US', {\n        minimumFractionDigits: 2\n      }), \" \\u0E1A\\u0E32\\u0E17\"), __jsx(\"h4\", null, \"\\u0E23\\u0E32\\u0E22\\u0E01\\u0E32\\u0E23\\u0E23\\u0E2D\\u0E15\\u0E23\\u0E27\\u0E08\\u0E2A\\u0E2D\\u0E1A\"), __jsx(\"h4\", null, this.state.WaitingRow, \" \\u0E2D\\u0E2D\\u0E40\\u0E14\\u0E2D\\u0E23\\u0E4C\")), __jsx(_Card.Grid, {\n        onClick: function onClick() {\n          return _this3.Cards(\"payback\");\n        },\n        hoverable: true,\n        style: cardStyle\n      }, __jsx(\"h3\", null, this.state.PayBackMonney.toLocaleString('en-US', {\n        minimumFractionDigits: 2\n      }), \" \\u0E1A\\u0E32\\u0E17\"), __jsx(\"h4\", null, \"\\u0E44\\u0E14\\u0E49\\u0E23\\u0E31\\u0E1A\\u0E40\\u0E07\\u0E34\\u0E19\\u0E04\\u0E23\\u0E1A\\u0E16\\u0E49\\u0E27\\u0E19\"), __jsx(\"h4\", null, this.state.PayBackRow, \" \\u0E2D\\u0E2D\\u0E40\\u0E14\\u0E2D\\u0E23\\u0E4C\")), __jsx(_Card.Grid, {\n        onClick: function onClick() {\n          return _this3.Cards(\"excess\");\n        },\n        hoverable: true,\n        style: cardStyle\n      }, __jsx(\"h3\", null, this.state.ExcessMonney.toLocaleString('en-US', {\n        minimumFractionDigits: 2\n      }), \" \\u0E1A\\u0E32\\u0E17\"), __jsx(\"h4\", null, \"\\u0E44\\u0E14\\u0E49\\u0E23\\u0E31\\u0E1A\\u0E40\\u0E07\\u0E34\\u0E19\\u0E40\\u0E01\\u0E34\\u0E19\"), __jsx(\"h4\", null, this.state.ExcessRow, \" \\u0E2D\\u0E2D\\u0E40\\u0E14\\u0E2D\\u0E23\\u0E4C\")), __jsx(_Card.Grid, {\n        onClick: function onClick() {\n          return _this3.Cards(\"absent\");\n        },\n        hoverable: true,\n        style: cardStyle\n      }, __jsx(\"h3\", null, this.state.AbsentMonney.toLocaleString('en-US', {\n        minimumFractionDigits: 2\n      }), \" \\u0E1A\\u0E32\\u0E17\"), __jsx(\"h4\", null, \"\\u0E44\\u0E14\\u0E49\\u0E23\\u0E31\\u0E1A\\u0E40\\u0E07\\u0E34\\u0E19\\u0E04\\u0E37\\u0E19\\u0E44\\u0E21\\u0E48\\u0E04\\u0E23\\u0E1A\"), __jsx(\"h4\", null, this.state.AbsentRow, \" \\u0E2D\\u0E2D\\u0E40\\u0E14\\u0E2D\\u0E23\\u0E4C\")), __jsx(_Card.Grid, {\n        style: cardStyle\n      }, __jsx(\"h3\", null, \"200000000.00 .-\"), __jsx(\"h4\", null, \"\\u0E1B\\u0E34\\u0E14\\u0E01\\u0E32\\u0E23\\u0E02\\u0E32\\u0E22\"), __jsx(\"h4\", null, \"-\")))), __jsx(_Col, {\n        lg: {\n          span: \"14\",\n          offset: \"1\"\n        }\n      }, __jsx(_Card, {\n        style: {\n          boxShadow: \"0 3px 6px 0 rgba(0, 0, 0, 0.2)\"\n        }\n      }, __jsx(Bar, {\n        data: {\n          labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],\n          datasets: [{\n            label: 'Waiting',\n            data: [12, 19, 3, 5, 2, 3]\n          }, {\n            label: 'PayBack',\n            data: [11, 12, 8, 7, 8, 4]\n          }, {\n            label: 'PayBack',\n            data: [11, 12, 8, 7, 8, 4]\n          }],\n          options: {\n            scales: {\n              yAxisID: [{\n                id: 'a',\n                type: 'linear',\n                position: 'left'\n              }, {\n                id: 'b',\n                type: 'linear',\n                position: 'right'\n              }]\n            }\n          }\n        }\n      })), __jsx(_Table, {\n        size: \"small\",\n        columns: columns,\n        dataSource: this.state.dataTable,\n        style: {\n          boxShadow: \"0 3px 6px 0 rgba(0, 0, 0, 0.2)\"\n        },\n        scroll: {\n          x: 500,\n          y: 500\n        }\n      })));\n    }\n  }]);\n\n  return databoard;\n}(Component);\n\nexport default withCookies(databoard);\nvar columns = [{\n  title: 'วันที่',\n  dataIndex: 'dates',\n  key: 'dates',\n  width: 100\n}, {\n  title: 'เลขพัสดุ',\n  dataIndex: 'number',\n  key: 'number',\n  width: 150\n}, {\n  title: 'ราคาสินค้า\t',\n  dataIndex: 'price',\n  key: 'price',\n  width: 100\n}, {\n  title: 'ชื่อลูกค้า',\n  dataIndex: 'customer',\n  key: 'customer',\n  width: 150\n}, {\n  title: 'ที่อยู่จัดส่งพัสดุ',\n  dataIndex: 'address',\n  key: 'address',\n  width: 250\n}, {\n  title: 'รหัสไปรษณี',\n  dataIndex: 'post',\n  key: 'post',\n  width: 100\n}, {\n  title: 'เบอร์ติดต่อ',\n  dataIndex: 'phone',\n  key: 'phone',\n  width: 150\n}];\nvar cardStyle = {\n  width: '50%'\n};","map":null,"metadata":{},"sourceType":"module"}