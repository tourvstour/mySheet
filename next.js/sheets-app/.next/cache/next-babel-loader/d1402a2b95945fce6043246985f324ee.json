{"ast":null,"code":"var _JSON$stringify = require(\"@babel/runtime-corejs2/core-js/json/stringify\");\n\nvar url = 'http://localhost:2000';\nvar upload = '/upload',\n    payback = \"/payback\",\n    show = \"/show\",\n    transport = '/transport',\n    board = '/board'; //อัพโหลดไฟลexcel waiting\n\nexports.Upfile = function (user, transport_comp, excel) {\n  return fetch(url + upload, {\n    method: \"POST\",\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: _JSON$stringify({\n      user: user,\n      transport_comp: transport_comp,\n      excel: excel\n    })\n  }).then(function (res) {\n    return res.json();\n  }).then(function (res) {\n    return res;\n  });\n};\n\nexports.Payback = function (user, transport_comp, excel) {\n  return fetch(url + payback, {\n    method: \"POST\",\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: _JSON$stringify({\n      user: user,\n      transport_comp: transport_comp,\n      excel: excel\n    })\n  }).then(function (res) {\n    return res.json();\n  }).then(function (res) {\n    return res;\n  });\n}; //show\n\n\nexports.Show = function () {\n  return fetch(url + show, {\n    method: \"POST\"\n  });\n}; //`บริษัทขนส่ง\n\n\nexports.TranSport = function () {\n  return fetch(url + transport, {\n    method: \"POST\"\n  }).then(function (res) {\n    return res.json();\n  }).then(function (res) {\n    return res;\n  });\n}; //borads\n\n\nexports.OrderResult = function (user) {\n  return fetch(url + board, {\n    method: \"POST\",\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: _JSON$stringify({\n      user: user\n    })\n  }).then(function (res) {\n    return res.json();\n  }).then(function (res) {\n    return res;\n  });\n};","map":{"version":3,"sources":["D:/react/webs/next.js/sheets-app/apis/datas.jsx"],"names":["url","upload","payback","show","transport","board","exports","Upfile","user","transport_comp","excel","fetch","method","headers","body","then","res","json","Payback","Show","TranSport","OrderResult"],"mappings":";;AAAA,IAAIA,GAAG,GAAG,uBAAV;AACA,IAAIC,MAAM,GAAG,SAAb;AAAA,IACIC,OAAO,GAAG,UADd;AAAA,IAEIC,IAAI,GAAG,OAFX;AAAA,IAGIC,SAAS,GAAG,YAHhB;AAAA,IAIIC,KAAK,GAAG,QAJZ,C,CAMA;;AACAC,OAAO,CAACC,MAAR,GAAiB,UAACC,IAAD,EAAOC,cAAP,EAAuBC,KAAvB,EAAiC;AAC9C,SAAOC,KAAK,CAACX,GAAG,GAAGC,MAAP,EAAe;AACvBW,IAAAA,MAAM,EAAE,MADe;AAEvBC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB;AAFX,KAFc;AAMvBC,IAAAA,IAAI,EAAE,gBAAe;AACjBN,MAAAA,IAAI,EAAEA,IADW;AAEjBC,MAAAA,cAAc,EAAEA,cAFC;AAGjBC,MAAAA,KAAK,EAAEA;AAHU,KAAf;AANiB,GAAf,CAAL,CAWJK,IAXI,CAWC,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,GAXJ,EAYFF,IAZE,CAYG,UAAAC,GAAG,EAAI;AACT,WAAOA,GAAP;AACH,GAdE,CAAP;AAeH,CAhBD;;AAiBAV,OAAO,CAACY,OAAR,GAAkB,UAACV,IAAD,EAAOC,cAAP,EAAuBC,KAAvB,EAAiC;AAC/C,SAAOC,KAAK,CAACX,GAAG,GAAGE,OAAP,EAAgB;AACxBU,IAAAA,MAAM,EAAE,MADgB;AAExBC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB;AAFX,KAFe;AAMxBC,IAAAA,IAAI,EAAE,gBAAe;AACjBN,MAAAA,IAAI,EAAEA,IADW;AAEjBC,MAAAA,cAAc,EAAEA,cAFC;AAGjBC,MAAAA,KAAK,EAAEA;AAHU,KAAf;AANkB,GAAhB,CAAL,CAWJK,IAXI,CAWC,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,GAXJ,EAYFF,IAZE,CAYG,UAAAC,GAAG,EAAI;AACT,WAAOA,GAAP;AACH,GAdE,CAAP;AAeH,CAhBD,C,CAkBA;;;AACAV,OAAO,CAACa,IAAR,GAAe,YAAM;AACjB,SAAOR,KAAK,CAACX,GAAG,GAAGG,IAAP,EAAa;AACrBS,IAAAA,MAAM,EAAE;AADa,GAAb,CAAZ;AAGH,CAJD,C,CAKA;;;AACAN,OAAO,CAACc,SAAR,GAAoB,YAAM;AACtB,SAAOT,KAAK,CAACX,GAAG,GAAGI,SAAP,EAAkB;AAC1BQ,IAAAA,MAAM,EAAE;AADkB,GAAlB,CAAL,CAGFG,IAHE,CAGG,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,GAHN,EAIFF,IAJE,CAIG,UAAAC,GAAG,EAAI;AACT,WAAOA,GAAP;AACH,GANE,CAAP;AAOH,CARD,C,CAUA;;;AACAV,OAAO,CAACe,WAAR,GAAsB,UAACb,IAAD,EAAU;AAC5B,SAAOG,KAAK,CAACX,GAAG,GAAGK,KAAP,EAAc;AACtBO,IAAAA,MAAM,EAAE,MADc;AAEtBC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB;AAFX,KAFa;AAMtBC,IAAAA,IAAI,EAAC,gBAAe;AAChBN,MAAAA,IAAI,EAACA;AADW,KAAf;AANiB,GAAd,CAAL,CAUFO,IAVE,CAUG,UAAAC,GAAG;AAAA,WAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,GAVN,EAWFF,IAXE,CAWG,UAAAC,GAAG,EAAI;AACT,WAAOA,GAAP;AACH,GAbE,CAAP;AAcH,CAfD","sourcesContent":["var url = 'http://localhost:2000'\r\nvar upload = '/upload',\r\n    payback = \"/payback\",\r\n    show = \"/show\",\r\n    transport = '/transport',\r\n    board = '/board'\r\n\r\n//อัพโหลดไฟลexcel waiting\r\nexports.Upfile = (user, transport_comp, excel) => {\r\n    return fetch(url + upload, {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            user: user,\r\n            transport_comp: transport_comp,\r\n            excel: excel\r\n        })\r\n    }).then(res => res.json())\r\n        .then(res => {\r\n            return res\r\n        })\r\n}\r\nexports.Payback = (user, transport_comp, excel) => {\r\n    return fetch(url + payback, {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            user: user,\r\n            transport_comp: transport_comp,\r\n            excel: excel\r\n        })\r\n    }).then(res => res.json())\r\n        .then(res => {\r\n            return res\r\n        })\r\n}\r\n\r\n//show\r\nexports.Show = () => {\r\n    return fetch(url + show, {\r\n        method: \"POST\"\r\n    })\r\n}\r\n//`บริษัทขนส่ง\r\nexports.TranSport = () => {\r\n    return fetch(url + transport, {\r\n        method: \"POST\"\r\n    })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            return res\r\n        })\r\n}\r\n\r\n//borads\r\nexports.OrderResult = (user) => {\r\n    return fetch(url + board, {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body:JSON.stringify({\r\n            user:user\r\n        })\r\n    })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            return res\r\n        })\r\n}"]},"metadata":{},"sourceType":"script"}