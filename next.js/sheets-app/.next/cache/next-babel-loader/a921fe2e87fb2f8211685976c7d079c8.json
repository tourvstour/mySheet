{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _message from \"antd/lib/message\";\nvar _jsxFileName = \"D:\\\\react\\\\webs\\\\next.js\\\\sheets-app\\\\components\\\\CheckLogin.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport { withCookies } from 'react-cookie';\nimport { Login } from '../apis/datas';\nimport 'antd/dist/antd.css';\n\nclass CheckLogin extends Component {\n  componentDidMount() {\n    const {\n      cookies\n    } = this.props;\n    let user = cookies.get(\"user\"),\n        pass = cookies.get(\"password\");\n\n    if (user === undefined || pass === undefined) {\n      _message.error(\"login\");\n\n      setTimeout(() => {\n        window.location.href = \"/login\";\n      }, 1000);\n    } else {\n      new _Promise((resolve, reject) => {\n        resolve(Login(user, pass));\n      }).then(res => {\n        console.log(res);\n\n        if (res === false) {\n          _message.error(\"login\");\n\n          setTimeout(() => {\n            window.location.href = \"/login\";\n          }, 1000);\n        } else {\n          cookies.set('storeName', res.map(a => a.user_store_name));\n          cookies.set('storeNumber', res.map(a => a.user_store_number));\n          cookies.set('email', res.map(a => a.user_profiles_email));\n          cookies.set('userNumber', res.map(a => a.user_profile_number));\n        }\n      });\n    }\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default withCookies(CheckLogin);","map":{"version":3,"sources":["D:/react/webs/next.js/sheets-app/components/CheckLogin.jsx"],"names":["React","Component","withCookies","Login","CheckLogin","componentDidMount","cookies","props","user","get","pass","undefined","error","setTimeout","window","location","href","resolve","reject","then","res","console","log","set","map","a","user_store_name","user_store_number","user_profiles_email","user_profile_number","render"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,KAAT,QAAsB,eAAtB;AAEA,OAAO,oBAAP;;AAEA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAC/BI,EAAAA,iBAAiB,GAAG;AAChB,UAAM;AAAEC,MAAAA;AAAF,QAAc,KAAKC,KAAzB;AACA,QAAIC,IAAI,GAAGF,OAAO,CAACG,GAAR,CAAY,MAAZ,CAAX;AAAA,QACIC,IAAI,GAAGJ,OAAO,CAACG,GAAR,CAAY,UAAZ,CADX;;AAGA,QAAID,IAAI,KAAKG,SAAT,IAAsBD,IAAI,KAAKC,SAAnC,EAA8C;AAC1C,eAAQC,KAAR,CAAc,OAAd;;AACAC,MAAAA,UAAU,CAAC,MAAM;AACbC,QAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;AACH,OAFS,EAEP,IAFO,CAAV;AAGH,KALD,MAKO;AACH,mBAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC7BD,QAAAA,OAAO,CAACd,KAAK,CAACK,IAAD,EAAOE,IAAP,CAAN,CAAP;AACH,OAFD,EAGKS,IAHL,CAGUC,GAAG,IAAI;AACTC,QAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;;AACA,YAAIA,GAAG,KAAK,KAAZ,EAAmB;AACf,mBAAQR,KAAR,CAAc,OAAd;;AACAC,UAAAA,UAAU,CAAC,MAAM;AACbC,YAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,QAAvB;AACH,WAFS,EAEP,IAFO,CAAV;AAGH,SALD,MAKO;AACHV,UAAAA,OAAO,CAACiB,GAAR,CAAY,WAAZ,EAAyBH,GAAG,CAACI,GAAJ,CAAQC,CAAC,IAAIA,CAAC,CAACC,eAAf,CAAzB;AACApB,UAAAA,OAAO,CAACiB,GAAR,CAAY,aAAZ,EAA2BH,GAAG,CAACI,GAAJ,CAAQC,CAAC,IAAIA,CAAC,CAACE,iBAAf,CAA3B;AACArB,UAAAA,OAAO,CAACiB,GAAR,CAAY,OAAZ,EAAqBH,GAAG,CAACI,GAAJ,CAAQC,CAAC,IAAIA,CAAC,CAACG,mBAAf,CAArB;AACAtB,UAAAA,OAAO,CAACiB,GAAR,CAAY,YAAZ,EAA0BH,GAAG,CAACI,GAAJ,CAAQC,CAAC,IAAIA,CAAC,CAACI,mBAAf,CAA1B;AACH;AACJ,OAhBL;AAiBH;AACJ;;AACDC,EAAAA,MAAM,GAAG;AACL,WAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAR;AAGH;;AAnC8B;;AAqCnC,eAAe5B,WAAW,CAACE,UAAD,CAA1B","sourcesContent":["import React, { Component } from 'react'\r\nimport { withCookies } from 'react-cookie'\r\nimport { Login } from '../apis/datas'\r\nimport { message } from 'antd'\r\nimport 'antd/dist/antd.css'\r\n\r\nclass CheckLogin extends Component {\r\n    componentDidMount() {\r\n        const { cookies } = this.props\r\n        let user = cookies.get(\"user\"),\r\n            pass = cookies.get(\"password\")\r\n\r\n        if (user === undefined || pass === undefined) {\r\n            message.error(\"login\")\r\n            setTimeout(() => {\r\n                window.location.href = \"/login\"\r\n            }, 1000)\r\n        } else {\r\n            new Promise((resolve, reject) => {\r\n                resolve(Login(user, pass))\r\n            })\r\n                .then(res => {\r\n                    console.log(res)\r\n                    if (res === false) {\r\n                        message.error(\"login\")\r\n                        setTimeout(() => {\r\n                            window.location.href = \"/login\"\r\n                        }, 1000)\r\n                    } else {\r\n                        cookies.set('storeName', res.map(a => a.user_store_name))\r\n                        cookies.set('storeNumber', res.map(a => a.user_store_number))\r\n                        cookies.set('email', res.map(a => a.user_profiles_email))\r\n                        cookies.set('userNumber', res.map(a => a.user_profile_number))\r\n                    }\r\n                })\r\n        }\r\n    }\r\n    render() {\r\n        return (<div>\r\n\r\n        </div>)\r\n    }\r\n}\r\nexport default withCookies(CheckLogin)"]},"metadata":{},"sourceType":"module"}