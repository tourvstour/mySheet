{"ast":null,"code":"import _Table from \"antd/lib/table\";\nimport _Col from \"antd/lib/col\";\nimport _Card from \"antd/lib/card\";\nimport _Button from \"antd/lib/button\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _message from \"antd/lib/message\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Select from \"antd/lib/select\";\nvar _jsxFileName = \"D:\\\\react\\\\webs\\\\next.js\\\\sheets-app\\\\components\\\\CodPayBack.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport readXlsxFile from 'read-excel-file';\nimport { Payback, TranSport } from '../apis/datas';\nimport 'antd/dist/antd.css';\nimport CheckLogin from '../components/CheckLogin';\nimport { withCookies } from 'react-cookie';\nimport ExportExcel from './ExporotExcel';\nconst {\n  Option\n} = _Select;\nconst columns = [{\n  title: 'วันที่',\n  dataIndex: 'dates',\n  key: 'dates',\n  width: 100\n}, {\n  title: 'เลขพัสดุ',\n  dataIndex: 'number',\n  key: 'number',\n  width: 150\n}, {\n  title: 'ราคาสินค้า\t',\n  dataIndex: 'price',\n  key: 'price',\n  width: 100\n}, {\n  title: 'ชื่อลูกค้า',\n  dataIndex: 'customer',\n  key: 'customer',\n  width: 150\n}, {\n  title: 'ที่อยู่จัดส่งพัสดุ',\n  dataIndex: 'address',\n  key: 'address',\n  width: 250\n}, {\n  title: 'รหัสไปรษณี',\n  dataIndex: 'post',\n  key: 'post',\n  width: 100\n}, {\n  title: 'เบอร์ติดต่อ',\n  dataIndex: 'phone',\n  key: 'phone',\n  width: 150\n}];\n\nclass CodPayBack extends Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"importExcel\", () => {\n      const input = document.getElementById('file');\n      let result = [];\n      readXlsxFile(input.files[0], {}).then(res => {\n        res.forEach(arr => {\n          let arr0 = new Date(arr[0]).toLocaleDateString(),\n              arr1 = arr[1],\n              arr2 = arr[2].toLocaleString('en-US', {\n            minimumFractionDigits: 2\n          }),\n              arr3 = arr[3],\n              arr4 = arr[4],\n              arr5 = arr[5],\n              arr6 = arr[6];\n          result.push({\n            dates: arr0.toString(),\n            number: arr1,\n            price: arr2,\n            customer: arr3,\n            address: arr4,\n            post: arr5,\n            phone: arr6\n          });\n        });\n        var fill = result.filter(result => {\n          return result.number !== \"เลขพัสดุ\";\n        });\n        console.log(fill);\n        this.setState({\n          file: fill\n        });\n      });\n    });\n\n    _defineProperty(this, \"Upload\", () => {\n      const {\n        cookies\n      } = this.props;\n      let user = cookies.get('userNumber'),\n          store = cookies.get('storeNumber'),\n          excel = this.state.file,\n          transport_comp = this.state.transportSelect.toString();\n\n      _message.loading('upload...', 2).then(() => {\n        if (excel.length > 0) {\n          new _Promise((resolve, rejects) => {\n            var a = Payback(user, transport_comp, excel, store);\n            resolve(a);\n          }).then(res => {\n            let code = res.code,\n                mess = res.message;\n            console.log(code);\n\n            if (code === '1') {\n              _message.success(mess, 2).then(() => {\n                document.getElementById('file').value = null;\n                this.setState({\n                  file: []\n                });\n              });\n            } else {\n              _message.error('error', 2);\n            }\n          }).catch(err => {\n            console.log(err);\n          });\n        } else {\n          _message.warning('ไม่พบข้อมูล', 2);\n        }\n      });\n    });\n\n    _defineProperty(this, \"TranSportSelect\", value => {\n      //console.log(value)\n      if (value > 0) {\n        this.setState({\n          transportSelect: value,\n          buttonUpload: false\n        });\n      } else {\n        this.setState({\n          buttonUpload: true\n        });\n      }\n    });\n\n    this.state = {\n      file: [],\n      tranSportList: [],\n      transportSelect: [],\n      buttonUpload: true\n    };\n  }\n\n  componentDidMount() {\n    new _Promise((resolve, rejects) => {\n      resolve(TranSport());\n    }).then(res => {\n      this.setState({\n        tranSportList: res\n      });\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      style: {\n        padding: \"2.7% 0 0 0\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    }, __jsx(CheckLogin, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154\n      },\n      __self: this\n    }), __jsx(\"div\", {\n      style: {\n        backgroundColor: \"#f7f7f7\",\n        width: \"100%\",\n        height: \"100%\",\n        position: \"absolute\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155\n      },\n      __self: this\n    }, __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), __jsx(_Col, {\n      lg: {\n        span: 6,\n        offset: 2\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162\n      },\n      __self: this\n    }, __jsx(_Card, {\n      style: {\n        boxShadow: \"0 3px 6px 0 rgba(0, 0, 0, 0.2)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      style: {\n        textAlign: \"center\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    }, \"\\u0E2D\\u0E31\\u0E1E\\u0E42\\u0E2B\\u0E25\\u0E14 shoping payback\"), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), __jsx(\"input\", {\n      type: \"file\",\n      id: \"file\",\n      onChange: this.importExcel,\n      style: {\n        width: 180\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 167\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }), __jsx(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }, \"\\u0E1A\\u0E23\\u0E34\\u0E29\\u0E31\\u0E17\\u0E02\\u0E19\\u0E2A\\u0E48\\u0E07 : \"), __jsx(_Select, {\n      id: \"transport\",\n      style: {\n        width: 200\n      },\n      onChange: this.TranSportSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, this.state.tranSportList.map((data, index) => __jsx(Option, {\n      key: index,\n      value: data.transport_company_number,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177\n      },\n      __self: this\n    }, data.transport_company_name)))), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182\n      },\n      __self: this\n    }), __jsx(_Button, {\n      block: true,\n      onClick: this.Upload,\n      disabled: this.state.buttonUpload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, \"\\u0E2D\\u0E31\\u0E1E\\u0E42\\u0E2B\\u0E25\\u0E14\\u0E02\\u0E49\\u0E2D\\u0E21\\u0E39\\u0E25\")), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }), __jsx(_Card, {\n      style: {\n        boxShadow: \"0 3px 6px 0 rgba(0, 0, 0, 0.2)\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186\n      },\n      __self: this\n    }, __jsx(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188\n      },\n      __self: this\n    }, \"\\u0E02\\u0E31\\u0E49\\u0E19\\u0E15\\u0E2D\\u0E19\\u0E01\\u0E32\\u0E23 Upload File Excel\"), __jsx(ExportExcel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    })))), __jsx(_Col, {\n      lg: {\n        span: 13,\n        offset: 1\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193\n      },\n      __self: this\n    }, __jsx(_Table, {\n      style: {\n        boxShadow: \"0 3px 6px 0 rgba(0, 0, 0, 0.2)\"\n      },\n      size: \"small\",\n      columns: columns,\n      dataSource: this.state.file,\n      scroll: {\n        x: 500,\n        y: 500\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default withCookies(CodPayBack);","map":{"version":3,"sources":["D:/react/webs/next.js/sheets-app/components/CodPayBack.jsx"],"names":["React","Component","readXlsxFile","Payback","TranSport","CheckLogin","withCookies","ExportExcel","Option","columns","title","dataIndex","key","width","CodPayBack","constructor","input","document","getElementById","result","files","then","res","forEach","arr","arr0","Date","toLocaleDateString","arr1","arr2","toLocaleString","minimumFractionDigits","arr3","arr4","arr5","arr6","push","dates","toString","number","price","customer","address","post","phone","fill","filter","console","log","setState","file","cookies","props","user","get","store","excel","state","transport_comp","transportSelect","loading","length","resolve","rejects","a","code","mess","message","success","value","error","catch","err","warning","buttonUpload","tranSportList","componentDidMount","render","padding","backgroundColor","height","position","span","offset","boxShadow","textAlign","importExcel","TranSportSelect","map","data","index","transport_company_number","transport_company_name","Upload","x","y"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport readXlsxFile from 'read-excel-file'\r\nimport { Payback, TranSport } from '../apis/datas'\r\nimport { Button, Card, Select, Col, Table, message } from 'antd'\r\nimport 'antd/dist/antd.css'\r\nimport CheckLogin from '../components/CheckLogin'\r\nimport { withCookies } from 'react-cookie'\r\nimport ExportExcel from './ExporotExcel'\r\n\r\nconst { Option } = Select\r\nconst columns = [{\r\n  title: 'วันที่',\r\n  dataIndex: 'dates',\r\n  key: 'dates',\r\n  width: 100\r\n}, {\r\n  title: 'เลขพัสดุ',\r\n  dataIndex: 'number',\r\n  key: 'number',\r\n  width: 150\r\n}, {\r\n  title: 'ราคาสินค้า\t',\r\n  dataIndex: 'price',\r\n  key: 'price',\r\n  width: 100\r\n}, {\r\n  title: 'ชื่อลูกค้า',\r\n  dataIndex: 'customer',\r\n  key: 'customer',\r\n  width: 150\r\n}, {\r\n  title: 'ที่อยู่จัดส่งพัสดุ',\r\n  dataIndex: 'address',\r\n  key: 'address',\r\n  width: 250\r\n}, {\r\n  title: 'รหัสไปรษณี',\r\n  dataIndex: 'post',\r\n  key: 'post',\r\n  width: 100\r\n}, {\r\n  title: 'เบอร์ติดต่อ',\r\n  dataIndex: 'phone',\r\n  key: 'phone',\r\n  width: 150\r\n}]\r\nclass CodPayBack extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      file: [],\r\n      tranSportList: [],\r\n      transportSelect: [],\r\n      buttonUpload:true\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    new Promise((resolve, rejects) => {\r\n      resolve(TranSport())\r\n    }).then(res => {\r\n      this.setState({\r\n        tranSportList: res\r\n      })\r\n    })\r\n  }\r\n\r\n  importExcel = () => {\r\n    const input = document.getElementById('file')\r\n    let result = []\r\n    readXlsxFile(input.files[0], {})\r\n      .then(res => {\r\n        res.forEach(arr => {\r\n          let arr0 = new Date(arr[0]).toLocaleDateString(),\r\n            arr1 = arr[1],\r\n            arr2 = arr[2].toLocaleString('en-US', { minimumFractionDigits: 2 }),\r\n            arr3 = arr[3],\r\n            arr4 = arr[4],\r\n            arr5 = arr[5],\r\n            arr6 = arr[6]\r\n          result.push({\r\n            dates: arr0.toString(),\r\n            number: arr1,\r\n            price: arr2,\r\n            customer: arr3,\r\n            address: arr4,\r\n            post: arr5,\r\n            phone: arr6\r\n          })\r\n        })\r\n        var fill = result.filter((result) => {\r\n          return result.number !== \"เลขพัสดุ\"\r\n        })\r\n        console.log(fill)\r\n        this.setState({\r\n          file: fill\r\n        })\r\n      })\r\n  }\r\n\r\n  Upload = () => {\r\n    const { cookies } = this.props\r\n    let user = cookies.get('userNumber'),\r\n      store = cookies.get('storeNumber'),\r\n      excel = this.state.file,\r\n      transport_comp = this.state.transportSelect.toString()\r\n    message.loading('upload...', 2)\r\n      .then(() => {\r\n        if (excel.length > 0) {\r\n          new Promise((resolve, rejects) => {\r\n            var a = Payback(user, transport_comp, excel, store)\r\n            resolve(a)\r\n          }).then(res => {\r\n            let code = res.code,\r\n              mess = res.message\r\n            console.log(code)\r\n            if (code === '1') {\r\n              message.success(mess, 2)\r\n                .then(() => {\r\n                  document.getElementById('file').value = null\r\n                  this.setState({\r\n                    file: []\r\n                  })\r\n                })\r\n            } else {\r\n              message.error('error', 2)\r\n            }\r\n          })\r\n            .catch(err => { console.log(err) })\r\n        } else {\r\n          message.warning('ไม่พบข้อมูล',2)\r\n        }\r\n      })\r\n  }\r\n\r\n\r\n  TranSportSelect = (value) => {\r\n    //console.log(value)\r\n    if (value > 0) {\r\n      this.setState({\r\n        transportSelect: value,\r\n        buttonUpload: false\r\n      })\r\n    }else{\r\n      this.setState({\r\n        buttonUpload: true\r\n      })\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={{ padding: \"2.7% 0 0 0\" }}>\r\n        <CheckLogin />\r\n        <div style={{\r\n          backgroundColor: \"#f7f7f7\",\r\n          width: \"100%\",\r\n          height: \"100%\",\r\n          position: \"absolute\"\r\n        }}>\r\n          <br />\r\n          <Col lg={{ span: 6, offset: 2 }} >\r\n            <Card style={{ boxShadow: \"0 3px 6px 0 rgba(0, 0, 0, 0.2)\" }}>\r\n              <div style={{ textAlign: \"center\" }}>อัพโหลด shoping payback</div>\r\n              <br />\r\n              <input type=\"file\" id=\"file\" onChange={this.importExcel} style={{ width: 180, }} />\r\n              <br />\r\n              <br />\r\n              <label>\r\n                <span>บริษัทขนส่ง : </span>\r\n                <Select\r\n                  id={\"transport\"}\r\n                  style={{ width: 200 }}\r\n                  onChange={this.TranSportSelect}\r\n                >\r\n                  {this.state.tranSportList.map((data, index) => (\r\n                    <Option key={index} value={data.transport_company_number}>{data.transport_company_name}</Option>\r\n                  ))}\r\n                </Select>\r\n              </label>\r\n              <br />\r\n              <br />\r\n              <Button block onClick={this.Upload} disabled={this.state.buttonUpload}>อัพโหลดข้อมูล</Button>\r\n            </Card>\r\n            <br/>\r\n            <Card style={{ boxShadow: \"0 3px 6px 0 rgba(0, 0, 0, 0.2)\" }}>\r\n            <label>\r\n                <span>ขั้นตอนการ Upload File Excel</span>\r\n                <ExportExcel />\r\n              </label>\r\n            </Card>\r\n          </Col>\r\n          <Col lg={{ span: 13, offset: 1 }}>\r\n            <Table style={{ boxShadow: \"0 3px 6px 0 rgba(0, 0, 0, 0.2)\" }} size=\"small\" columns={columns} dataSource={this.state.file} scroll={{ x: 500, y: 500 }} />\r\n          </Col>\r\n        </div>\r\n      </div >\r\n    )\r\n  }\r\n}\r\n\r\nexport default withCookies(CodPayBack)\r\n"]},"metadata":{},"sourceType":"module"}