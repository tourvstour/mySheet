{"ast":null,"code":"import _Card from \"antd/lib/card\";\nimport _Table from \"antd/lib/table\";\nimport _Button from \"antd/lib/button\";\nimport _DatePicker from \"antd/lib/date-picker\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Select from \"antd/lib/select\";\nvar _jsxFileName = \"F:\\\\Web\\\\next.js\\\\sheets-app\\\\components\\\\uploadComp.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport readXlsxFile from 'read-excel-file';\nimport { Upfile, TranSport } from '../apis/datas';\nimport 'antd/dist/antd.css';\nvar Option = _Select.Option;\nvar columns = [{\n  title: 'เลขพัสดุ',\n  dataIndex: 'number',\n  key: 'number'\n}, {\n  title: 'ราคาสินค้า\t',\n  dataIndex: 'price',\n  key: 'price'\n}, {\n  title: 'ชื่อลูกค้า',\n  dataIndex: 'customer',\n  key: 'customer'\n}, {\n  title: 'ที่อยู่จัดส่งพัสดุ',\n  dataIndex: 'address',\n  key: 'address'\n}, {\n  title: 'รหัสไปรษณี',\n  dataIndex: 'post',\n  key: 'post'\n}, {\n  title: 'เบอร์ติดต่อ',\n  dataIndex: 'phone',\n  key: 'phone'\n}];\n\nvar ComponentUpload =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ComponentUpload, _Component);\n\n  function ComponentUpload() {\n    var _this;\n\n    _classCallCheck(this, ComponentUpload);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ComponentUpload).call(this));\n\n    _defineProperty(_assertThisInitialized(_this), \"importExcel\", function () {\n      var input = document.getElementById('file');\n      var result = [];\n      readXlsxFile(input.files[0], {}).then(function (res) {\n        res.forEach(function (arr) {\n          var arr1 = arr[0],\n              arr2 = arr[1],\n              arr3 = arr[2],\n              arr4 = arr[3],\n              arr5 = arr[4],\n              arr6 = arr[5];\n          result.push({\n            number: arr1,\n            price: arr2,\n            customer: arr3,\n            address: arr4,\n            post: arr5,\n            phone: arr6\n          });\n        });\n        var fill = result.filter(function () {\n          return result.number == \"เลขพัสดุ\";\n        });\n        console.log(fill);\n\n        _this.setState({\n          file: fill\n        });\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"Upload\", function () {\n      var excel = _this.state.file,\n          user = '1234',\n          date = _this.state.dateSelect.toString(),\n          transport_comp = _this.state.transportSelect.toString();\n\n      if (excel.length > 0) {\n        new _Promise(function (resolve, rejects) {\n          var a = Upfile(user, date, transport_comp, excel);\n          resolve(a);\n        }).then(function (res) {\n          console.log(res);\n        })[\"catch\"](function (err) {\n          console.log(err);\n        });\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"TranSportSelect\", function (value) {\n      console.log(value);\n\n      _this.setState({\n        transportSelect: value\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"DateChange\", function (date, dateString) {\n      console.log(dateString);\n\n      _this.setState({\n        dateSelect: dateString\n      });\n    });\n\n    _this.state = {\n      file: [],\n      tranSportList: [],\n      dateSelect: [],\n      transportSelect: []\n    };\n    return _this;\n  }\n\n  _createClass(ComponentUpload, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      new _Promise(function (resolve, rejects) {\n        resolve(TranSport());\n      }).then(function (res) {\n        _this2.setState({\n          tranSportList: res\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, __jsx(_Card, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, __jsx(\"input\", {\n        type: \"file\",\n        id: \"file\",\n        onChange: this.importExcel,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }), __jsx(_DatePicker, {\n        onChange: this.DateChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), __jsx(_Select, {\n        style: {\n          width: 200\n        },\n        onChange: this.TranSportSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, this.state.tranSportList.map(function (data, index) {\n        return __jsx(Option, {\n          key: index,\n          value: data.transport_company_number,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127\n          },\n          __self: this\n        }, data.transport_company_name);\n      })), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }), __jsx(_Button, {\n        onClick: this.Upload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"upload\"), __jsx(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }), __jsx(\"table\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, this.state.file.map(function (key, data_key) {\n        return __jsx(\"tr\", {\n          key: data_key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135\n          },\n          __self: this\n        }, __jsx(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136\n          },\n          __self: this\n        }, key.cel1), __jsx(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137\n          },\n          __self: this\n        }, key.cel2), __jsx(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138\n          },\n          __self: this\n        }, key.cel3), __jsx(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139\n          },\n          __self: this\n        }, key.cel4), __jsx(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, key.cel5));\n      })), __jsx(_Table, {\n        columns: columns,\n        dataSource: this.state.file,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return ComponentUpload;\n}(Component);\n\nexport default ComponentUpload;","map":{"version":3,"sources":["F:\\Web\\next.js\\sheets-app\\components\\uploadComp.jsx"],"names":["React","Component","readXlsxFile","Upfile","TranSport","Option","columns","title","dataIndex","key","ComponentUpload","input","document","getElementById","result","files","then","res","forEach","arr","arr1","arr2","arr3","arr4","arr5","arr6","push","number","price","customer","address","post","phone","fill","filter","console","log","setState","file","excel","state","user","date","dateSelect","toString","transport_comp","transportSelect","length","resolve","rejects","a","err","value","dateString","tranSportList","importExcel","DateChange","width","TranSportSelect","map","data","index","transport_company_number","transport_company_name","Upload","data_key","cel1","cel2","cel3","cel4","cel5"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport readXlsxFile from 'read-excel-file'\r\nimport { Upfile, TranSport } from '../apis/datas'\r\nimport { Button, DatePicker, Select, Card, Table } from 'antd'\r\nimport 'antd/dist/antd.css';\r\n\r\nconst { Option } = Select\r\nconst columns = [{\r\n  title: 'เลขพัสดุ',\r\n  dataIndex: 'number',\r\n  key: 'number',\r\n}, {\r\n  title: 'ราคาสินค้า\t',\r\n  dataIndex: 'price',\r\n  key: 'price',\r\n}, {\r\n  title: 'ชื่อลูกค้า',\r\n  dataIndex: 'customer',\r\n  key: 'customer',\r\n}, {\r\n  title: 'ที่อยู่จัดส่งพัสดุ',\r\n  dataIndex: 'address',\r\n  key: 'address',\r\n}, {\r\n  title: 'รหัสไปรษณี',\r\n  dataIndex: 'post',\r\n  key: 'post',\r\n}, {\r\n  title: 'เบอร์ติดต่อ',\r\n  dataIndex: 'phone',\r\n  key: 'phone',\r\n},\r\n]\r\nclass ComponentUpload extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      file: [],\r\n      tranSportList: [],\r\n      dateSelect: [],\r\n      transportSelect: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    new Promise((resolve, rejects) => {\r\n      resolve(TranSport())\r\n    }).then(res => {\r\n      this.setState({\r\n        tranSportList: res\r\n      })\r\n    })\r\n  }\r\n  importExcel = () => {\r\n    const input = document.getElementById('file')\r\n    let result = []\r\n    readXlsxFile(input.files[0], {})\r\n      .then(res => {\r\n        res.forEach(arr => {\r\n          let arr1 = arr[0],\r\n            arr2 = arr[1],\r\n            arr3 = arr[2],\r\n            arr4 = arr[3],\r\n            arr5 = arr[4],\r\n            arr6 = arr[5]\r\n          result.push({\r\n            number: arr1,\r\n            price: arr2,\r\n            customer: arr3,\r\n            address: arr4,\r\n            post: arr5,\r\n            phone: arr6\r\n          })\r\n        })\r\n        var fill = result.filter(() => {\r\n          return result.number == \"เลขพัสดุ\"\r\n        })\r\n        console.log(fill)\r\n        this.setState({\r\n          file: fill\r\n        })\r\n      })\r\n  }\r\n\r\n  Upload = () => {\r\n    let excel = this.state.file,\r\n      user = '1234',\r\n      date = this.state.dateSelect.toString(),\r\n      transport_comp = this.state.transportSelect.toString()\r\n    if (excel.length > 0) {\r\n      new Promise((resolve, rejects) => {\r\n        var a = Upfile(user, date, transport_comp, excel)\r\n        resolve(a)\r\n      }).then(res => {\r\n        console.log(res)\r\n      })\r\n        .catch(err => { console.log(err) })\r\n    }\r\n  }\r\n\r\n  TranSportSelect = (value) => {\r\n    console.log(value)\r\n    this.setState({\r\n      transportSelect: value\r\n    })\r\n  }\r\n\r\n  DateChange = (date, dateString) => {\r\n    console.log(dateString)\r\n    this.setState({\r\n      dateSelect: dateString\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <input type=\"file\" id=\"file\" onChange={this.importExcel} />\r\n          <br />\r\n          <DatePicker onChange={this.DateChange} />\r\n          <br />\r\n          <Select\r\n            style={{ width: 200 }}\r\n            onChange={this.TranSportSelect}\r\n          >\r\n            {this.state.tranSportList.map((data, index) => (\r\n              <Option key={index} value={data.transport_company_number}>{data.transport_company_name}</Option>\r\n            ))}\r\n          </Select>\r\n          <br />\r\n          <Button onClick={this.Upload}>upload</Button>\r\n          <br />\r\n          <table>\r\n            {this.state.file.map((key, data_key) => (\r\n              <tr key={data_key}>\r\n                <td>{key.cel1}</td>\r\n                <td>{key.cel2}</td>\r\n                <td>{key.cel3}</td>\r\n                <td>{key.cel4}</td>\r\n                <td>{key.cel5}</td>\r\n              </tr>\r\n            ))}\r\n          </table>\r\n          <Table columns={columns} dataSource={this.state.file} />\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ComponentUpload\r\n"]},"metadata":{},"sourceType":"module"}