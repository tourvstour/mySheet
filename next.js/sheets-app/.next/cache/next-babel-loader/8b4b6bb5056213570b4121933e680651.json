{"ast":null,"code":"import _Card from \"antd/lib/card\";\nimport _Button from \"antd/lib/button\";\nimport _Table from \"antd/lib/table\";\nimport _DatePicker from \"antd/lib/date-picker\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _Select from \"antd/lib/select\";\nvar _jsxFileName = \"F:\\\\Web\\\\next.js\\\\sheets-app\\\\components\\\\uploadComp.jsx\";\nvar __jsx = React.createElement;\nimport React, { Component } from 'react';\nimport readXlsxFile from 'read-excel-file';\nimport { Upfile, TranSport } from '../apis/datas';\nimport 'antd/dist/antd.css';\nconst {\n  Option\n} = _Select;\nconst columns = [{\n  title: 'วันที่',\n  dataIndex: 'dates',\n  key: 'dates'\n}, {\n  title: 'เลขพัสดุ',\n  dataIndex: 'number',\n  key: 'number'\n}, {\n  title: 'ราคาสินค้า\t',\n  dataIndex: 'price',\n  key: 'price'\n}, {\n  title: 'ชื่อลูกค้า',\n  dataIndex: 'customer',\n  key: 'customer'\n}, {\n  title: 'ที่อยู่จัดส่งพัสดุ',\n  dataIndex: 'address',\n  key: 'address'\n}, {\n  title: 'รหัสไปรษณี',\n  dataIndex: 'post',\n  key: 'post'\n}, {\n  title: 'เบอร์ติดต่อ',\n  dataIndex: 'phone',\n  key: 'phone'\n}];\n\nclass ComponentUpload extends Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"importExcel\", () => {\n      const input = document.getElementById('file');\n      let result = [];\n      readXlsxFile(input.files[0], {}).then(res => {\n        res.forEach(arr => {\n          let arr0 = new Date(arr[0]).toLocaleDateString(),\n              arr1 = arr[1],\n              arr2 = arr[2],\n              arr3 = arr[3],\n              arr4 = arr[4],\n              arr5 = arr[5],\n              arr6 = arr[6];\n          result.push({\n            dates: arr0.toString(),\n            number: arr1.toString(),\n            price: arr2.toString(),\n            customer: arr3.toString(),\n            address: arr4.toString(),\n            post: arr5.toString(),\n            phone: arr6.toString()\n          });\n        });\n        var fill = result.filter(result => {\n          return result.number !== \"เลขพัสดุ\";\n        });\n        console.log(fill);\n        this.setState({\n          file: fill\n        });\n      });\n    });\n\n    _defineProperty(this, \"Upload\", () => {\n      let excel = this.state.file,\n          user = '1234',\n          date = this.state.dateSelect.toString(),\n          transport_comp = this.state.transportSelect.toString();\n\n      if (excel.length > 0) {\n        new _Promise((resolve, rejects) => {\n          var a = Upfile(user, date, transport_comp, excel);\n          resolve(a);\n        }).then(res => {\n          console.log(res);\n        }).catch(err => {\n          console.log(err);\n        });\n      }\n    });\n\n    _defineProperty(this, \"TranSportSelect\", value => {\n      console.log(value);\n      this.setState({\n        transportSelect: value\n      });\n    });\n\n    _defineProperty(this, \"DateChange\", (date, dateString) => {\n      console.log(dateString);\n      this.setState({\n        dateSelect: dateString\n      });\n    });\n\n    this.state = {\n      file: [],\n      tranSportList: [],\n      dateSelect: [],\n      transportSelect: []\n    };\n  }\n\n  componentDidMount() {\n    new _Promise((resolve, rejects) => {\n      resolve(TranSport());\n    }).then(res => {\n      this.setState({\n        tranSportList: res\n      });\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, __jsx(_Card, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    }, __jsx(\"input\", {\n      type: \"file\",\n      id: \"file\",\n      onChange: this.importExcel,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), __jsx(_DatePicker, {\n      onChange: this.DateChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), __jsx(_Select, {\n      style: {\n        width: 200\n      },\n      onChange: this.TranSportSelect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, this.state.tranSportList.map((data, index) => __jsx(Option, {\n      key: index,\n      value: data.transport_company_number,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, data.transport_company_name))), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), __jsx(_Table, {\n      columns: columns,\n      dataSource: this.state.file,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138\n      },\n      __self: this\n    }), __jsx(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139\n      },\n      __self: this\n    }), __jsx(_Button, {\n      block: true,\n      onClick: this.Upload,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"upload\")));\n  }\n\n}\n\nexport default ComponentUpload;","map":{"version":3,"sources":["F:\\Web\\next.js\\sheets-app\\components\\uploadComp.jsx"],"names":["React","Component","readXlsxFile","Upfile","TranSport","Option","columns","title","dataIndex","key","ComponentUpload","constructor","input","document","getElementById","result","files","then","res","forEach","arr","arr0","Date","toLocaleDateString","arr1","arr2","arr3","arr4","arr5","arr6","push","dates","toString","number","price","customer","address","post","phone","fill","filter","console","log","setState","file","excel","state","user","date","dateSelect","transport_comp","transportSelect","length","resolve","rejects","a","catch","err","value","dateString","tranSportList","componentDidMount","render","importExcel","DateChange","width","TranSportSelect","map","data","index","transport_company_number","transport_company_name","Upload"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport readXlsxFile from 'read-excel-file'\r\nimport { Upfile, TranSport } from '../apis/datas'\r\nimport { Button, DatePicker, Select, Card, Table } from 'antd'\r\nimport 'antd/dist/antd.css';\r\n\r\nconst { Option } = Select\r\nconst columns = [{\r\n  title: 'วันที่',\r\n  dataIndex: 'dates',\r\n  key: 'dates',\r\n}, {\r\n  title: 'เลขพัสดุ',\r\n  dataIndex: 'number',\r\n  key: 'number',\r\n}, {\r\n  title: 'ราคาสินค้า\t',\r\n  dataIndex: 'price',\r\n  key: 'price',\r\n}, {\r\n  title: 'ชื่อลูกค้า',\r\n  dataIndex: 'customer',\r\n  key: 'customer',\r\n}, {\r\n  title: 'ที่อยู่จัดส่งพัสดุ',\r\n  dataIndex: 'address',\r\n  key: 'address',\r\n}, {\r\n  title: 'รหัสไปรษณี',\r\n  dataIndex: 'post',\r\n  key: 'post',\r\n}, {\r\n  title: 'เบอร์ติดต่อ',\r\n  dataIndex: 'phone',\r\n  key: 'phone',\r\n},\r\n]\r\nclass ComponentUpload extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      file: [],\r\n      tranSportList: [],\r\n      dateSelect: [],\r\n      transportSelect: []\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    new Promise((resolve, rejects) => {\r\n      resolve(TranSport())\r\n    }).then(res => {\r\n      this.setState({\r\n        tranSportList: res\r\n      })\r\n    })\r\n  }\r\n  importExcel = () => {\r\n    const input = document.getElementById('file')\r\n    let result = []\r\n    readXlsxFile(input.files[0], {})\r\n      .then(res => {\r\n        res.forEach(arr => {\r\n          let arr0 = new Date(arr[0]).toLocaleDateString(),\r\n            arr1 = arr[1],\r\n            arr2 = arr[2],\r\n            arr3 = arr[3],\r\n            arr4 = arr[4],\r\n            arr5 = arr[5],\r\n            arr6 = arr[6]\r\n          result.push({\r\n            dates: arr0.toString(),\r\n            number: arr1.toString(),\r\n            price: arr2.toString(),\r\n            customer: arr3.toString(),\r\n            address: arr4.toString(),\r\n            post: arr5.toString(),\r\n            phone: arr6.toString()\r\n          })\r\n        })\r\n        var fill = result.filter((result) => {\r\n          return result.number !== \"เลขพัสดุ\"\r\n        })\r\n        console.log(fill)\r\n        this.setState({\r\n          file: fill\r\n        })\r\n      })\r\n  }\r\n\r\n  Upload = () => {\r\n    let excel = this.state.file,\r\n      user = '1234',\r\n      date = this.state.dateSelect.toString(),\r\n      transport_comp = this.state.transportSelect.toString()\r\n    if (excel.length > 0) {\r\n      new Promise((resolve, rejects) => {\r\n        var a = Upfile(user, date, transport_comp, excel)\r\n        resolve(a)\r\n      }).then(res => {\r\n        console.log(res)\r\n      })\r\n        .catch(err => { console.log(err) })\r\n    }\r\n  }\r\n\r\n  TranSportSelect = (value) => {\r\n    console.log(value)\r\n    this.setState({\r\n      transportSelect: value\r\n    })\r\n  }\r\n\r\n  DateChange = (date, dateString) => {\r\n    console.log(dateString)\r\n    this.setState({\r\n      dateSelect: dateString\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Card>\r\n          <input type=\"file\" id=\"file\" onChange={this.importExcel} />\r\n          <br />\r\n          <DatePicker onChange={this.DateChange} />\r\n          <br />\r\n          <Select\r\n            style={{ width: 200 }}\r\n            onChange={this.TranSportSelect}\r\n          >\r\n            {this.state.tranSportList.map((data, index) => (\r\n              <Option key={index} value={data.transport_company_number}>{data.transport_company_name}</Option>\r\n            ))}\r\n          </Select>\r\n          <br />\r\n          <br />\r\n          <Table columns={columns} dataSource={this.state.file} />\r\n          <br />\r\n          <Button block onClick={this.Upload}>upload</Button>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ComponentUpload\r\n"]},"metadata":{},"sourceType":"module"}