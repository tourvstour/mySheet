{"ast":null,"code":"var _JSON$stringify = require(\"@babel/runtime-corejs2/core-js/json/stringify\");\n\nvar url = 'http://localhost:2000';\nvar upload = '/upload',\n    payback = \"/payback\",\n    show = \"/show\",\n    transport = '/transport',\n    board = '/board'; //อัพโหลดไฟลexcel waiting\n\nexports.Upfile = (user, transport_comp, excel) => {\n  return fetch(url + upload, {\n    method: \"POST\",\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: _JSON$stringify({\n      user: user,\n      transport_comp: transport_comp,\n      excel: excel\n    })\n  }).then(res => res.json()).then(res => {\n    return res;\n  });\n};\n\nexports.Payback = (user, transport_comp, excel) => {\n  return fetch(url + payback, {\n    method: \"POST\",\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: _JSON$stringify({\n      user: user,\n      transport_comp: transport_comp,\n      excel: excel\n    })\n  }).then(res => res.json()).then(res => {\n    return res;\n  });\n}; //show\n\n\nexports.Show = () => {\n  return fetch(url + show, {\n    method: \"POST\"\n  });\n}; //`บริษัทขนส่ง\n\n\nexports.TranSport = () => {\n  return fetch(url + transport, {\n    method: \"POST\"\n  }).then(res => res.json()).then(res => {\n    return res;\n  });\n}; //borads\n\n\nexports.OrderResult = user => {\n  return fetch(url + board).then(res => res.json()).then(res => {\n    return res;\n  });\n};","map":{"version":3,"sources":["D:/react/webs/next.js/sheets-app/apis/datas.jsx"],"names":["url","upload","payback","show","transport","board","exports","Upfile","user","transport_comp","excel","fetch","method","headers","body","then","res","json","Payback","Show","TranSport","OrderResult"],"mappings":";;AAAA,IAAIA,GAAG,GAAG,uBAAV;AACA,IAAIC,MAAM,GAAG,SAAb;AAAA,IACAC,OAAO,GAAG,UADV;AAAA,IAEAC,IAAI,GAAG,OAFP;AAAA,IAGAC,SAAS,GAAC,YAHV;AAAA,IAIAC,KAAK,GAAE,QAJP,C,CAMA;;AACAC,OAAO,CAACC,MAAR,GAAiB,CAACC,IAAD,EAAOC,cAAP,EAAuBC,KAAvB,KAAiC;AAChD,SAAQC,KAAK,CAACX,GAAG,GAAGC,MAAP,EAAe;AACtBW,IAAAA,MAAM,EAAE,MADc;AAEtBC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB;AAFX,KAFa;AAMtBC,IAAAA,IAAI,EAAE,gBAAe;AACjBN,MAAAA,IAAI,EAAEA,IADW;AAEjBC,MAAAA,cAAc,EAAEA,cAFC;AAGjBC,MAAAA,KAAK,EAAEA;AAHU,KAAf;AANgB,GAAf,CAAL,CAWHK,IAXG,CAWEC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAXT,EAYDF,IAZC,CAYIC,GAAG,IAAI;AACT,WAAOA,GAAP;AACH,GAdC,CAAR;AAeD,CAhBD;;AAiBAV,OAAO,CAACY,OAAR,GAAkB,CAACV,IAAD,EAAOC,cAAP,EAAuBC,KAAvB,KAAiC;AAC/C,SAAQC,KAAK,CAACX,GAAG,GAAGE,OAAP,EAAgB;AACvBU,IAAAA,MAAM,EAAE,MADe;AAEvBC,IAAAA,OAAO,EAAE;AACL,gBAAU,kBADL;AAEL,sBAAgB;AAFX,KAFc;AAMvBC,IAAAA,IAAI,EAAE,gBAAe;AACjBN,MAAAA,IAAI,EAAEA,IADW;AAEjBC,MAAAA,cAAc,EAAEA,cAFC;AAGjBC,MAAAA,KAAK,EAAEA;AAHU,KAAf;AANiB,GAAhB,CAAL,CAWHK,IAXG,CAWEC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAXT,EAYDF,IAZC,CAYIC,GAAG,IAAI;AACT,WAAOA,GAAP;AACH,GAdC,CAAR;AAeD,CAhBH,C,CAkBA;;;AACAV,OAAO,CAACa,IAAR,GAAa,MAAI;AACb,SAAOR,KAAK,CAACX,GAAG,GAACG,IAAL,EAAU;AAClBS,IAAAA,MAAM,EAAC;AADW,GAAV,CAAZ;AAGH,CAJD,C,CAKA;;;AACAN,OAAO,CAACc,SAAR,GAAkB,MAAI;AAClB,SAAOT,KAAK,CAACX,GAAG,GAACI,SAAL,EAAe;AACvBQ,IAAAA,MAAM,EAAC;AADgB,GAAf,CAAL,CAGNG,IAHM,CAGDC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EAHJ,EAINF,IAJM,CAIDC,GAAG,IAAE;AACP,WAAOA,GAAP;AACH,GANM,CAAP;AAOH,CARD,C,CAUA;;;AACAV,OAAO,CAACe,WAAR,GAAqBb,IAAD,IAAQ;AACxB,SAAOG,KAAK,CAACX,GAAG,GAAEK,KAAN,CAAL,CACNU,IADM,CACDC,GAAG,IAAEA,GAAG,CAACC,IAAJ,EADJ,EAENF,IAFM,CAEDC,GAAG,IAAE;AACP,WAAOA,GAAP;AACH,GAJM,CAAP;AAKH,CAND","sourcesContent":["var url = 'http://localhost:2000'\r\nvar upload = '/upload',\r\npayback = \"/payback\",\r\nshow = \"/show\",\r\ntransport='/transport',\r\nboard ='/board'\r\n\r\n//อัพโหลดไฟลexcel waiting\r\nexports.Upfile = (user, transport_comp, excel) => {\r\n  return  fetch(url + upload, {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            user: user,\r\n            transport_comp: transport_comp,\r\n            excel: excel\r\n        })\r\n    }).then(res => res.json())\r\n        .then(res => {\r\n            return res\r\n        })\r\n}\r\nexports.Payback = (user, transport_comp, excel) => {\r\n    return  fetch(url + payback, {\r\n          method: \"POST\",\r\n          headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n          },\r\n          body: JSON.stringify({\r\n              user: user,\r\n              transport_comp: transport_comp,\r\n              excel: excel\r\n          })\r\n      }).then(res => res.json())\r\n          .then(res => {\r\n              return res\r\n          })\r\n  }\r\n\r\n//show\r\nexports.Show=()=>{\r\n    return fetch(url+show,{\r\n        method:\"POST\"\r\n    })\r\n}\r\n//`บริษัทขนส่ง\r\nexports.TranSport=()=>{\r\n    return fetch(url+transport,{\r\n        method:\"POST\"\r\n    })\r\n    .then(res=>res.json())\r\n    .then(res=>{\r\n        return res\r\n    })\r\n}\r\n\r\n//borads\r\nexports.OrderResult=(user)=>{\r\n    return fetch(url+ board)\r\n    .then(res=>res.json())\r\n    .then(res=>{\r\n        return res\r\n    })\r\n}"]},"metadata":{},"sourceType":"script"}