{"ast":null,"code":"import unpackXlsxFile from './unpackXlsxFileBrowser'; // Turns out IE11 doesn't support XPath, so not using the native `DOMParser` here.\n// https://github.com/catamphetamine/read-excel-file/issues/26\n// The bundle size with `./xmlBrowser` is 190 kilobytes,\n// the bundle size with `./xmlNode` is 290 kilobytes,\n// so `./xmlBrowser` polyfill is about 100 kilobytes in size.\n// Still, IE11 is a wide-spread browser and it's unlikely that\n// anyone would ignore it for now.\n// import xml from './xmlBrowser'\n\nimport xml from './xmlNode';\nimport readXlsxFileContents from './readXlsxFileContents';\n/**\r\n * Reads XLSX file into a 2D array of cells in a browser.\r\n * @param  {file} file - A file being uploaded in the browser.\r\n * @param  {object?} options\r\n * @param  {(number|string)?} options.sheet - Excel document sheet to read. Defaults to `1`. Will only read this sheet and skip others.\r\n * @return {Promise} Resolves to a 2D array of cells: an array of rows, each row being an array of cells.\r\n */\n\nexport default function readXlsxFile(file) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return unpackXlsxFile(file).then(function (entries) {\n    return readXlsxFileContents(entries, xml, options);\n  });\n}","map":null,"metadata":{},"sourceType":"module"}