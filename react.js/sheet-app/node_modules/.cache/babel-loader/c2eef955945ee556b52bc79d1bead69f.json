{"ast":null,"code":"var url = 'http://183.88.219.85:7079',\n    upload = '/upload',\n    payback = \"/payback\",\n    regiter = \"/regiter\",\n    transport = '/transport',\n    allOrder = '/allorder',\n    waitingOrder = '/waitingOrder',\n    payBackOrder = '/payBackOrder',\n    absent = '/absent',\n    excess = '/excess',\n    login = '/login',\n    update = '/update',\n    disable = 'disable'; //อัพโหลดไฟลexcel waiting\n\nexports.Upfile = (user, transport_comp, excel, store) => {\n  return fetch(url + upload, {\n    method: \"POST\",\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      user: user,\n      transport_comp: transport_comp,\n      excel: excel,\n      store: store\n    })\n  }).then(res => res.json()).then(res => {\n    return res;\n  });\n}; //อัพโหลดไฟลexcel payback\n\n\nexports.Payback = (user, transport_comp, excel, store) => {\n  return fetch(url + payback, {\n    method: \"POST\",\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      user: user,\n      transport_comp: transport_comp,\n      excel: excel,\n      store: store\n    })\n  }).then(res => res.json()).then(res => {\n    return res;\n  });\n}; //`บริษัทขนส่ง\n\n\nexports.TranSport = () => {\n  return fetch(url + transport, {\n    method: \"POST\"\n  }).then(res => res.json()).then(res => {\n    return res;\n  });\n}; //Reports \n\n\nexports.AllOrders = (user, store, date) => {\n  return fetch(url + allOrder, {\n    method: \"POST\",\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      user: user,\n      store: store,\n      date: date\n    })\n  }).then(res => res.json()).then(res => {\n    return res;\n  });\n};\n\nexports.WaitingOrders = (user, store, date) => {\n  return fetch(url + waitingOrder, {\n    method: \"POST\",\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      user: user,\n      store: store,\n      date: date\n    })\n  }).then(res => res.json()).then(res => {\n    return res;\n  });\n};\n\nexports.PayBackOrders = (user, store, date) => {\n  return fetch(url + payBackOrder, {\n    method: \"POST\",\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      user: user,\n      store: store,\n      date: date\n    })\n  }).then(res => res.json()).then(res => {\n    return res;\n  });\n};\n\nexports.Excess = (user, store, date) => {\n  return fetch(url + excess, {\n    method: \"POST\",\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      user: user,\n      store: store,\n      date: date\n    })\n  }).then(res => res.json()).then(res => {\n    return res;\n  });\n};\n\nexports.Absent = (user, store, date) => {\n  return fetch(url + absent, {\n    method: \"POST\",\n    headers: {\n      'Accept': 'application/json',\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      user: user,\n      store: store,\n      date: date\n    })\n  }).then(res => res.json()).then(res => {\n    return res;\n  });\n}; //Regit\n\n\nexports.Regit = dataRegit => {\n  return fetch(url + regiter, {\n    method: \"POST\",\n    headers: {\n      \"Accept\": \"application/json\",\n      'Content-Type': \"application/json\"\n    },\n    body: JSON.stringify({\n      dataRegit: dataRegit\n    })\n  }).then(res => res.json()).then(res => {\n    return res;\n  });\n}; //Login\n\n\nexports.Login = (user, pass) => {\n  let userName = user,\n      passWord = pass;\n  return fetch(url + login, {\n    method: \"POST\",\n    headers: {\n      \"Accept\": \"application/json\",\n      'Content-Type': \"application/json\"\n    },\n    body: JSON.stringify({\n      user: userName,\n      pass: passWord\n    })\n  }).then(res => res.json()).then(res => {\n    return res;\n  });\n};","map":{"version":3,"sources":["I:/jobs/react.js/sheet-app/src/apis/datas.jsx"],"names":["url","upload","payback","regiter","transport","allOrder","waitingOrder","payBackOrder","absent","excess","login","update","disable","exports","Upfile","user","transport_comp","excel","store","fetch","method","headers","body","JSON","stringify","then","res","json","Payback","TranSport","AllOrders","date","WaitingOrders","PayBackOrders","Excess","Absent","Regit","dataRegit","Login","pass","userName","passWord"],"mappings":"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","sourcesContent":["var url = 'http://183.88.219.85:7079',\r\n    upload = '/upload',\r\n    payback = \"/payback\",\r\n    regiter = \"/regiter\",\r\n    transport = '/transport',\r\n    allOrder = '/allorder',\r\n    waitingOrder = '/waitingOrder',\r\n    payBackOrder = '/payBackOrder',\r\n    absent = '/absent',\r\n    excess = '/excess',\r\n    login = '/login',\r\n    update = '/update',\r\n    disable = 'disable'\r\n\r\n//อัพโหลดไฟลexcel waiting\r\nexports.Upfile = (user, transport_comp, excel, store) => {\r\n    return fetch(url + upload, {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            user: user,\r\n            transport_comp: transport_comp,\r\n            excel: excel,\r\n            store: store\r\n        })\r\n    }).then(res => res.json())\r\n        .then(res => {\r\n            return res\r\n        })\r\n}\r\n//อัพโหลดไฟลexcel payback\r\nexports.Payback = (user, transport_comp, excel, store) => {\r\n    return fetch(url + payback, {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            user: user,\r\n            transport_comp: transport_comp,\r\n            excel: excel,\r\n            store: store\r\n        })\r\n    }).then(res => res.json())\r\n        .then(res => {\r\n            return res\r\n        })\r\n}\r\n\r\n//`บริษัทขนส่ง\r\nexports.TranSport = () => {\r\n    return fetch(url + transport, {\r\n        method: \"POST\"\r\n    })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            return res\r\n        })\r\n}\r\n\r\n\r\n//Reports \r\nexports.AllOrders = (user, store, date) => {\r\n    return fetch(url + allOrder, {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            user: user,\r\n            store: store,\r\n            date: date\r\n        })\r\n    })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            return res\r\n        })\r\n}\r\nexports.WaitingOrders = (user, store, date) => {\r\n    return fetch(url + waitingOrder, {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            user: user,\r\n            store: store,\r\n            date: date\r\n        })\r\n    })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            return res\r\n        })\r\n}\r\nexports.PayBackOrders = (user, store, date) => {\r\n    return fetch(url + payBackOrder, {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            user: user,\r\n            store: store,\r\n            date: date\r\n        })\r\n    })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            return res\r\n        })\r\n}\r\nexports.Excess = (user, store, date) => {\r\n    return fetch(url + excess, {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            user: user,\r\n            store: store,\r\n            date: date\r\n        })\r\n    })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            return res\r\n        })\r\n}\r\nexports.Absent = (user, store, date) => {\r\n    return fetch(url + absent, {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Accept': 'application/json',\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify({\r\n            user: user,\r\n            store: store,\r\n            date: date\r\n        })\r\n    })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            return res\r\n        })\r\n}\r\n//Regit\r\nexports.Regit = (dataRegit) => {\r\n    return fetch(url + regiter, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Accept\": \"application/json\",\r\n            'Content-Type': \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n            dataRegit: dataRegit\r\n        })\r\n    })\r\n        .then(res => res.json())\r\n        .then(res => {\r\n            return res\r\n        })\r\n}\r\n//Login\r\nexports.Login = (user, pass) => {\r\n    let userName = user,\r\n        passWord = pass\r\n    return fetch(url + login, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Accept\": \"application/json\",\r\n            'Content-Type': \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n            user: userName,\r\n            pass: passWord\r\n        })\r\n    }).then(res => res.json())\r\n        .then(res => {\r\n            return res\r\n        })\r\n}"]},"metadata":{},"sourceType":"module"}