{"ast":null,"code":"var _jsxFileName = \"I:\\\\jobs\\\\react.js\\\\sheet-app\\\\src\\\\components\\\\Comp_orders.jsx\";\nimport { Form, Input, Icon, Button } from 'antd';\nlet id = 0;\n\nclass DynamicFieldSet extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.remove = k => {\n      const form = this.props.form; // can use data-binding to get\n\n      const keys = form.getFieldValue('keys'); // We need at least one passenger\n\n      if (keys.length === 1) {\n        return;\n      } // can use data-binding to set\n\n\n      form.setFieldsValue({\n        keys: keys.filter(key => key !== k)\n      });\n    };\n\n    this.add = () => {\n      const form = this.props.form; // can use data-binding to get\n\n      const keys = form.getFieldValue('keys');\n      const nextKeys = keys.concat(id++); // can use data-binding to set\n      // important! notify form to detect changes\n\n      form.setFieldsValue({\n        keys: nextKeys\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      this.props.form.validateFields((err, values) => {\n        if (!err) {\n          const keys = values.keys,\n                names = values.names;\n          console.log('Received values of form: ', values);\n          console.log('Merged values:', keys.map(key => names[key]));\n        }\n      });\n    };\n  }\n\n  render() {\n    const _this$props$form = this.props.form,\n          getFieldDecorator = _this$props$form.getFieldDecorator,\n          getFieldValue = _this$props$form.getFieldValue;\n    const formItemLayout = {\n      labelCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 4\n        }\n      },\n      wrapperCol: {\n        xs: {\n          span: 24\n        },\n        sm: {\n          span: 20\n        }\n      }\n    };\n    const formItemLayoutWithOutLabel = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0\n        },\n        sm: {\n          span: 20,\n          offset: 4\n        }\n      }\n    };\n    getFieldDecorator('keys', {\n      initialValue: []\n    });\n    const keys = getFieldValue('keys');\n    const formItems = keys.map((k, index) => React.createElement(Form.Item, Object.assign({}, index === 0 ? formItemLayout : formItemLayoutWithOutLabel, {\n      label: index === 0 ? 'Passengers' : '',\n      required: false,\n      key: k,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }), getFieldDecorator(\"names[\".concat(k, \"]\"), {\n      validateTrigger: ['onChange', 'onBlur'],\n      rules: [{\n        required: true,\n        whitespace: true,\n        message: \"Please input passenger's name or delete this field.\"\n      }]\n    })(React.createElement(Input, {\n      placeholder: \"passenger name\",\n      style: {\n        width: '60%',\n        marginRight: 8\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    })), keys.length > 1 ? React.createElement(Icon, {\n      className: \"dynamic-delete-button\",\n      type: \"minus-circle-o\",\n      onClick: () => this.remove(k),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }) : null));\n    return React.createElement(Form, {\n      onSubmit: this.handleSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, formItems, React.createElement(Form.Item, Object.assign({}, formItemLayoutWithOutLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"dashed\",\n      onClick: this.add,\n      style: {\n        width: '60%'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Icon, {\n      type: \"plus\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }), \" Add field\")), React.createElement(Form.Item, Object.assign({}, formItemLayoutWithOutLabel, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }, \"Submit\")));\n  }\n\n}\n\nconst WrappedDynamicFieldSet = Form.create({\n  name: 'dynamic_form_item'\n})(DynamicFieldSet);\nReactDOM.render(React.createElement(WrappedDynamicFieldSet, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 109\n  },\n  __self: this\n}), mountNode);","map":{"version":3,"sources":["I:/jobs/react.js/sheet-app/src/components/Comp_orders.jsx"],"names":["Form","Input","Icon","Button","id","DynamicFieldSet","React","Component","remove","k","form","props","keys","getFieldValue","length","setFieldsValue","filter","key","add","nextKeys","concat","handleSubmit","e","preventDefault","validateFields","err","values","names","console","log","map","render","getFieldDecorator","formItemLayout","labelCol","xs","span","sm","wrapperCol","formItemLayoutWithOutLabel","offset","initialValue","formItems","index","validateTrigger","rules","required","whitespace","message","width","marginRight","WrappedDynamicFieldSet","create","name","ReactDOM","mountNode"],"mappings":"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","sourcesContent":["import { Form, Input, Icon, Button } from 'antd';\r\n\r\nlet id = 0;\r\n\r\nclass DynamicFieldSet extends React.Component {\r\n    remove = k => {\r\n        const { form } = this.props;\r\n        // can use data-binding to get\r\n        const keys = form.getFieldValue('keys');\r\n        // We need at least one passenger\r\n        if (keys.length === 1) {\r\n            return;\r\n        }\r\n\r\n        // can use data-binding to set\r\n        form.setFieldsValue({\r\n            keys: keys.filter(key => key !== k),\r\n        });\r\n    };\r\n\r\n    add = () => {\r\n        const { form } = this.props;\r\n        // can use data-binding to get\r\n        const keys = form.getFieldValue('keys');\r\n        const nextKeys = keys.concat(id++);\r\n        // can use data-binding to set\r\n        // important! notify form to detect changes\r\n        form.setFieldsValue({\r\n            keys: nextKeys,\r\n        });\r\n    };\r\n\r\n    handleSubmit = e => {\r\n        e.preventDefault();\r\n        this.props.form.validateFields((err, values) => {\r\n            if (!err) {\r\n                const { keys, names } = values;\r\n                console.log('Received values of form: ', values);\r\n                console.log('Merged values:', keys.map(key => names[key]));\r\n            }\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { getFieldDecorator, getFieldValue } = this.props.form;\r\n        const formItemLayout = {\r\n            labelCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 4 },\r\n            },\r\n            wrapperCol: {\r\n                xs: { span: 24 },\r\n                sm: { span: 20 },\r\n            },\r\n        };\r\n        const formItemLayoutWithOutLabel = {\r\n            wrapperCol: {\r\n                xs: { span: 24, offset: 0 },\r\n                sm: { span: 20, offset: 4 },\r\n            },\r\n        };\r\n        getFieldDecorator('keys', { initialValue: [] });\r\n        const keys = getFieldValue('keys');\r\n        const formItems = keys.map((k, index) => (\r\n            <Form.Item\r\n                {...(index === 0 ? formItemLayout : formItemLayoutWithOutLabel)}\r\n                label={index === 0 ? 'Passengers' : ''}\r\n                required={false}\r\n                key={k}\r\n            >\r\n                {getFieldDecorator(`names[${k}]`, {\r\n                    validateTrigger: ['onChange', 'onBlur'],\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            whitespace: true,\r\n                            message: \"Please input passenger's name or delete this field.\",\r\n                        },\r\n                    ],\r\n                })(<Input placeholder=\"passenger name\" style={{ width: '60%', marginRight: 8 }} />)}\r\n                {keys.length > 1 ? (\r\n                    <Icon\r\n                        className=\"dynamic-delete-button\"\r\n                        type=\"minus-circle-o\"\r\n                        onClick={() => this.remove(k)}\r\n                    />\r\n                ) : null}\r\n            </Form.Item>\r\n        ));\r\n        return (\r\n            <Form onSubmit={this.handleSubmit}>\r\n                {formItems}\r\n                <Form.Item {...formItemLayoutWithOutLabel}>\r\n                    <Button type=\"dashed\" onClick={this.add} style={{ width: '60%' }}>\r\n                        <Icon type=\"plus\" /> Add field\r\n          </Button>\r\n                </Form.Item>\r\n                <Form.Item {...formItemLayoutWithOutLabel}>\r\n                    <Button type=\"primary\" htmlType=\"submit\">\r\n                        Submit\r\n          </Button>\r\n                </Form.Item>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nconst WrappedDynamicFieldSet = Form.create({ name: 'dynamic_form_item' })(DynamicFieldSet);\r\nReactDOM.render(<WrappedDynamicFieldSet />, mountNode);"]},"metadata":{},"sourceType":"module"}